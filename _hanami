#compdef hanami
#autoload

# hanami zsh completion

local curcontext="$curcontext" state line _opts ret=1

_arguments -C -A "-v" -A "--version" \
	'(- 1 *)'{-v,--version}'[display version information]' \
	'1: :->cmds' \
	'*:: :->args' && ret=0

case $state in
	cmds)
		_values "hanami command" \
        "new[Generate new hanami project]" \
        "generate[Generate part of hanami project]" \
        "destroy[Destroy part of hanami project]" \
        "db[DB specific commands]" \
        "assets[Assets specific commands]" \
        "routes[Rerutns list of all project routes]" \
        "version[Display current hanami version]"
		ret=0
		;;
	args)
		case $line[1] in
			help)
				_values 'commands' \
                    'new' \
                    'generate' \
                    'destroy' \
                    'db' \
                    'assets' \
                    'routes' \
                    'version' && ret=0
				;;
			new)
				_arguments \
					'(--test)--test=-[generate project for a specific test framework]' \
					'(--database)--database=-[generate project for a specific database]'
				ret=0
				;;
			generate)
            _values "hanami generate command" \
                "app[Generate new hanami app]" \
                "action[Generate new hanami action]" \
                "model[Generate new hanami model]" \
                "migration[Generate new hanami migration]" \
                "mailer[Generate new hanami mailer]" \
                "secret[Generate new hanami secret]"
				ret=0
				;;
			destroy)
            _values "hanami destroy command" \
                "app[Destroy new hanami app]" \
                "action[Destroy new hanami action]" \
                "model[Destroy new hanami model]" \
                "migration[Destroy new hanami migration]" \
                "mailer[Destroy new hanami mailer]"
				ret=0
				;;
			db)
            _values "hanami db command" \
                "create[Create the database for the current environment]" \
                "drop[Drop the existing database for the current environment]" \
                "migrate[Run migrations found in db/migrations]" \
                "prepare[Prepares database for the current environment]" \
                "apply[Dumps a fresh schema into db/schema.sql]" \
                "version[Prints current database version]"
				ret=0
				;;
			assets)
            _values "hanami assets command" \
                "precompile[precompiles and copies all the assets from all the applications and third party gems]"
				ret=0
				;;
		esac
		;;
esac

return ret
